[33mcommit e11c31688240161dd92dd8552f330c0fb112aa37[m[33m ([m[1;36mHEAD -> [m[1;32mFeature/practica2[m[33m, [m[1;31morigin/Feature/practica2[m[33m)[m
Author: JuanManuel <juan.manuel.montes.reyes@uabc.edu.mx>
Date:   Tue Mar 1 09:01:59 2022 -0800

    actualizado ejercicio 2

[1mdiff --git a/Assets/Scripts/ProblemaPractica2.cs b/Assets/Scripts/ProblemaPractica2.cs[m
[1mindex 69929d5..fb14c5d 100644[m
[1m--- a/Assets/Scripts/ProblemaPractica2.cs[m
[1m+++ b/Assets/Scripts/ProblemaPractica2.cs[m
[36m@@ -6,27 +6,22 @@[m [mpublic class NewBehaviourScript : MonoBehaviour[m
 {[m
     // Start is called before the first frame update[m
 [m
[31m-     public List <int[]> testCases = new List <int[]>();[m
[31m-    public List <int[]> testExpectedResults = new List <int[]>();[m
     public int[] resultado = new int[2] {0,0};[m
[32m+[m[32m    public int[] input;[m
[32m+[m[32m     int target;[m
[32m+[m
 [m
[31m-    void Start()[m
[31m-    {[m
[31m-        testCases.Add(new int[]{8,1,2,2,3});[m
[31m-        testExpectedResults.Add(new int[]{4,0,1,1,3});[m
[31m-    }[m
 [m
     // Update is called once per frame[m
     void Update()[m
     {[m
         if (Input.GetKeyDown(KeyCode.K))[m
         {[m
[31m-            for (int i = 0; i < testCases.Count; i++)[m
[32m+[m[32m            int[] test1 = SumaDos(input, target);[m
[32m+[m[32m            foreach (int n in test1)[m
             {[m
[31m-                int[] result = NumbersLessThan(testCases[i]);[m
[31m-                bool passedTest = CompareTestResult(result,testExpectedResults[i]);[m
[31m-                Debug.Log($"Test {i}  :  {passedTest}");   [m
[31m-            }            [m
[32m+[m[32m                Debug.Log(n);[m[41m    [m
[32m+[m[32m            }[m
         }[m
     }[m
 [m
[36m@@ -50,18 +45,4 @@[m [mpublic class NewBehaviourScript : MonoBehaviour[m
     }[m
 [m
 [m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-    private bool CompareTestResult(int[] result, int[] expectedResult)[m
[31m-    {[m
[31m-        if(expectedResult.Length != result.Length) return false;[m
[31m-        for (int i = 0; i < result.Length; i++)[m
[31m-        {[m
[31m-            if(result[i] != expectedResult[i]) return false;[m
[31m-        }[m
[31m-        return true;[m
[31m-    }[m
 }[m
